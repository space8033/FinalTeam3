<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalteam3.exodia.employee.dao.EmployeeDao">
	
	<insert id="insertEmp" parameterType="JoinRequest">
		<selectKey keyProperty="emp_no" resultType="int" order="BEFORE">
	         select seq_emp.nextval from dual
      	</selectKey>
      	
      	insert into emp(emp_no, emp_id, emp_password, emp_isinit)
      	values(#{emp_no}, #{emp_id}, '{noop}0000', #{emp_isinit})
	</insert>

	<insert id="insertEmpInfo" parameterType="JoinRequest">
		<selectKey keyProperty="empinfo_no" resultType="int" order="BEFORE">
	         select seq_empinfo.nextval from dual
      	</selectKey>
      	
      	insert into empinfo(empinfo_no, empinfo_name, empinfo_position, empinfo_phone, empinfo_email, empinfo_createdat, emp_no)
      	values(#{empinfo_no}, #{empinfo_name}, #{empinfo_position}, #{empinfo_phone}, #{empinfo_email}, to_char(sysdate,'yyyy.mm.dd hh24:mi:ss'), #{emp_no})
	</insert>
	
	<insert id="insertRole" parameterType="int">
		insert into role(project_no, empinfo_no, role_category)
		values(0, #{empinfo_no}, 'ROLE_EMP')
	</insert>
	
	<select id="selectEmpByEmpId" parameterType="String" resultType="LoginResponse">
		select e.emp_id, e.emp_password, i.empinfo_name, e.emp_no, e.emp_isinit, e.emp_deletedAt, r.role_category
		from emp e, empinfo i, role r
		where project_no = 0
		and e.emp_no = i.emp_no
		and e.emp_id = #{emp_id}
		and r.project_no = 0
		and r.empinfo_no = i.empinfo_no
	</select>
	
	<select id="selectModifyByEmpId" parameterType="String" resultType="EmpModifyResponse">
		select i.empinfo_name, e.emp_id, i.empinfo_email, i.empinfo_phone, i.empinfo_position
		from emp e, empinfo i
		where e.emp_no = i.emp_no
		and emp_id=#{emp_id}
	</select>
	
	<select id="selectInfoNoByEmail" parameterType="String" resultType="int">
		select empinfo_no
		from empinfo
		where empinfo_email = #{empinfo_email}
	</select>
	
	<select id="selectNoByEmpId" resultType="int" parameterType="String">
		select emp_no
		from emp
		where emp_id = #{emp_id}
	</select>
	
	<select id="selectNoByEmpName" resultType="int" parameterType="String">
		select emp_no
		from empinfo
		where empinfo_name = #{empinfo_name}
	</select>
	
	<select id="selectNowPassword" resultType="String" parameterType="String">
		select emp_password
		from emp
		where emp_id = #{emp_id}
	</select>

	<select id="selectInfoByEmpId" resultType="LoginResponse" parameterType="LoginRequest">
		select e.emp_no, e.emp_id, e.emp_password, e.emp_isinit, e.emp_deletedAt, r.role_category
		from emp e, role r
		where project_no = #{project_no}
		and emp_id = #{emp_id}
	</select>
	
	<select id="selectAllEmployee" resultType="EmpNote">
		select i.empinfo_no, i.empinfo_name, i.empinfo_email, i.empinfo_position, e.emp_no, e.emp_id
		  from empinfo i, emp e
		 where e.emp_no = i.emp_no
	</select>
	
	<select id="selectTeamname" resultType="String" parameterType="int">
		select team_name
		from team
		where project_no = #{project_no}
		and empinfo_no = 0
		order by team_name
	</select>
	
	<select id="selectNoTeamEmp" resultType="EmpSimpleResponse">
		select empinfo_name, empinfo_email
		from empinfo
		left join team
		on empinfo.empinfo_no = team.empinfo_no
		where team.empinfo_no is null
	</select>
		
	<select id="selectTeamEmp" resultType="EmpSimpleResponse" parameterType="String">
		select i.empinfo_name, i.empinfo_email
		from empinfo i, team t
		where t.empinfo_no = i.empinfo_no
		and t.team_name = #{team_name}
		and t.team_isleader = 0
	</select>
	
	<select id="selectTeamLeader" resultType="EmpSimpleResponse" parameterType="String">
		select i.empinfo_name, i.empinfo_email
		from empinfo i, team t
		where t.empinfo_no = i.empinfo_no
		and t.team_name = #{team_name}
		and t.team_isleader = 1
	</select>

	<select id="selectTeamBasic" parameterType="String" resultType="TeamBasicResponse">
		select t.team_duty, i.emp_no, i.empinfo_name, t.team_isleader
		from team t, empinfo i
		where project_no = 0
		and i.empinfo_no = t.empinfo_no
		and t.team_name = #{team_name}
	</select>
	
	<select id="selectTeamDuty" parameterType="String" resultType="String">
		select team_duty
		from team
		where project_no = 0
		and empinfo_no = 0
		and team_name = #{team_name}
	</select>
	
	<select id="selectEmployeeForNote" resultType="EmpNote">
		select i.empinfo_no, i.empinfo_name, i.empinfo_email, i.empinfo_position, t.team_name, e.emp_no, e.emp_id
		  from empinfo i, team t, emp e
		 where project_no = 0
		   and i.empinfo_no = t.empinfo_no
		   and e.emp_no = i.emp_no
	</select>
	
	<update id="updateStatus" parameterType="String">
		update emp set emp_status = 'connected' where emp_id = #{emp_id}
	</update>
	
	<update id="updatePassword" parameterType="Map">
		update emp set emp_password = #{emp_password}, emp_isinit = #{emp_isinit} where emp_id = #{emp_id}
	</update>
	
	<select id="selectRolePM" parameterType="Integer">
		select empinfo_no
		from role
		where project_no = #{project_no}
		and role_category = 'ROLE_PM'
	</select>
	
	<update id="updateRole" parameterType="Map">
		update role set role_category = #{role_category} where project_no = 0 and empinfo_no = #{empinfo_no}
	</update>
	
	<update id="updateTeamDuty" parameterType="Map">
		update team set team_duty = #{team_duty} where project_no = #{project_no} and empinfo_no = 0 and team_name = #{team_name}
	</update>
	
	<select id="updateEmpInfo" parameterType="ModifyRequest">
		update empinfo set empinfo_email = #{empinfo_email}, empinfo_phone = #{empinfo_phone} where emp_no = #{emp_no}
	</select>

	<select id="selectInfoByEmpNo" resultType="EmployeeInfo" parameterType="int">
		select empinfo_no, empinfo_name, empinfo_position, empinfo_phone, empinfo_email, empinfo_createdat
		from empinfo
		where emp_no = #{emp_no}
	</select>
	
	<select id="selectEmpByEmpNo" resultType="JoinRequest" parameterType="int">
		select emp_no, emp_id
		from emp
		where emp_no = #{emp_no}
	</select>
	
	<!-- empinfo_no 로 empinfo 얻어오기 -->
	<select id="selectEmpInfoByEmpInfoNo" resultType="EmployeeInfo" parameterType="int">
		select empinfo_no, empinfo_name, empinfo_position, empinfo_phone, empinfo_email, empinfo_createdat
		from empinfo
		where empinfo_no = #{empinfo_no}
	</select>
	
	<delete id="deleteTeamEmpExceptAdmin" parameterType="String">
		delete from team
		where project_no = 0
		and team_name = #{team_name}
		and empinfo_no != 0
		and team_isleader = 0
	</delete>
	
	<delete id="deleteTeamByEmpNo" parameterType="String">
		delete from team
		where project_no = 0
		and team_name = #{team_name}
		and team_isleader = 1
	</delete>
	
	<delete id="deleteAllTeam" parameterType="String">
		delete from team
		where project_no = 0
		and team_name = #{team_name}
	</delete>
	
	<insert id="insertNewTeamEmp" parameterType="Map">
		<selectKey keyProperty="team_no" resultType="int" order="BEFORE">
	         select seq_team.nextval from dual
      	</selectKey>
      	
      	insert into team(team_no, project_no, empinfo_no, team_name, team_duty, team_isleader)
      	values(#{team_no}, 0, #{empinfo_no}, #{team_name}, #{team_duty}, #{team_isleader})
	</insert>
</mapper>